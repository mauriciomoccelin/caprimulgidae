// <auto-generated />
using Caprimulgidae.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Caprimulgidae.Infra.Data.Migrations
{
    [DbContext(typeof(CaprimulgidaeContext))]
    partial class CaprimulgidaeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Caprimulgidae.Domain.Models.AreasConhecimentos.AreaConhecimento", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 36)))
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("AreaConhecimentos");
                });

            modelBuilder.Entity("Caprimulgidae.Domain.Models.Estimativas.Estimativa", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 36)))
                        .HasColumnType("varchar(36)");

                    b.Property<decimal>("Posteriory");

                    b.Property<decimal>("Priory");

                    b.Property<decimal>("Probabilidade");

                    b.HasKey("Id");

                    b.ToTable("Estimativas");
                });

            modelBuilder.Entity("Caprimulgidae.Domain.Models.Eventos.Evento", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 36)))
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("IdAreaConhecimento")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 36)))
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("Padrao")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal>("ProbabilidadeAcontecer");

                    b.Property<decimal>("ProbabilidadeNaoAcontecer");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("IdAreaConhecimento");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("Caprimulgidae.Domain.Models.Usuarios.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 36)))
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PrimeiroNome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SegundoNome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(64)")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Caprimulgidae.Domain.Models.Eventos.Evento", b =>
                {
                    b.HasOne("Caprimulgidae.Domain.Models.AreasConhecimentos.AreaConhecimento", "AreaConhecimento")
                        .WithMany("Eventos")
                        .HasForeignKey("IdAreaConhecimento")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
